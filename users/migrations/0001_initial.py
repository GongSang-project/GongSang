# Generated by Django 5.2.5 on 2025-08-15 16:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_youth', models.BooleanField(default=True)),
                ('profile_image', models.ImageField(blank=True, upload_to='users/profile', verbose_name='프로필 이미지')),
                ('is_id_verified', models.BooleanField(default=False)),
                ('age', models.IntegerField(blank=True, default=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', '남성'), ('F', '여성')], max_length=1, null=True)),
                ('id_card_image', models.ImageField(blank=True, null=True, upload_to='users/id_card', verbose_name='신분증 사진')),
                ('is_id_card_uploaded', models.BooleanField(default=False, verbose_name='신분증 첨부 여부')),
                ('preferred_time', models.CharField(blank=True, choices=[('A', '🌅 아침형'), ('B', '🌙 저녁형')], max_length=1, null=True)),
                ('conversation_style', models.CharField(blank=True, choices=[('A', '🤫 필요한 대화만'), ('B', '💬 자주 대화')], max_length=1, null=True)),
                ('important_points', models.CharField(blank=True, choices=[('A', '🧹 청결'), ('B', '🛌 생활 리듬'), ('C', '🧍 소통'), ('D', '🙋 배려심'), ('E', '🔏 사생활 존중')], max_length=2, null=True)),
                ('meal_preference', models.CharField(blank=True, choices=[('A', '\t🍽️ 함께 먹기 좋아해요'), ('B', '🍱 각자 먹기 선호해요')], max_length=1, null=True)),
                ('weekend_preference', models.CharField(blank=True, choices=[('A', '🏠 집에서'), ('B', '🚶 외출')], max_length=1, null=True)),
                ('smoking_preference', models.CharField(blank=True, choices=[('A', '🚬 예'), ('B', '🚭 아니오')], max_length=1, null=True)),
                ('noise_level', models.CharField(blank=True, choices=[('A', '📺 하루 종일 틀어놓는 편이에요'), ('B', '🎶 특정 시간대만 들어요'), ('C', '🔇 거의 안 켜요')], max_length=1, null=True)),
                ('space_sharing_preference', models.CharField(blank=True, choices=[('A', '자주 이용'), ('B', '필요할 때만'), ('C', '거의 이용 안 함')], max_length=1, null=True)),
                ('pet_preference', models.CharField(blank=True, choices=[('A', '🐶 가능'), ('B', '🐱 불가능')], max_length=1, null=True)),
                ('wishes', models.TextField(blank=True, null=True)),
                ('interested_province', models.CharField(blank=True, max_length=50, null=True, verbose_name='관심 시/도')),
                ('interested_city', models.CharField(blank=True, max_length=50, null=True, verbose_name='관심 시/군/구')),
                ('interested_district', models.CharField(blank=True, max_length=50, null=True, verbose_name='관심 읍/면/동')),
                ('living_type', models.CharField(blank=True, choices=[('alone_female_senior', '혼자'), ('senior_couple', '시니어 부부'), ('grandchild', '손자'), ('other', '기타')], max_length=30, null=True, verbose_name='동거 형태')),
                ('living_type_other', models.CharField(blank=True, max_length=100, null=True, verbose_name='기타 동거 형태')),
                ('groups', models.ManyToManyField(blank=True, related_name='youth', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='youth', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
